<!DOCTYPE Robei>
<Module Width="1468" X="0" File="Current/voice_play_cptBlock.model" Include="" Height="963" Name="voice_play_cptBlock" Parameters="" Class="module" Color="#d3d3d3" Y="0" Parent="0" Code="&#xa;&#xa;&#xa;" Type="module" Comment="">
 <Module Width="99" X="1279" File="Current/iic_send.model" Include="" Height="171" Name="iic_send1" Parameters="" Class="iic_send" Color="#d3d3d3" Y="628.004" Parent="voice_play_cptBlock" Code="parameter   C_DIV_SELECT        =   10'd500 ; // 分频系数选择&#xa;&#xa;parameter   C_DIV_SELECT0       =   (C_DIV_SELECT >> 2)  -  1           , // 用来产生IIC总线SCL低电平最中间的标志位&#xa;            C_DIV_SELECT1       =   (C_DIV_SELECT >> 1)  -  1           ,&#xa;            C_DIV_SELECT2       =   (C_DIV_SELECT0 + C_DIV_SELECT1) + 1 , // 用来产生IIC总线SCL高电平最中间的标志位&#xa;            C_DIV_SELECT3       =   (C_DIV_SELECT >> 1)  +  1           ; // 用来产生IIC总线SCL下降沿标志位&#xa; &#xa;&#xa;reg     [9:0]   R_scl_cnt       ; // 用来产生IIC总线SCL时钟线的计数器   &#xa;reg             R_scl_en        ; // IIC总线SCL时钟线使能信号&#xa;reg     [3:0]   R_state         ; &#xa;reg             R_sda_mode      ; // 设置SDA模式，1位输出，0为输入&#xa;reg             R_sda_reg       ; // SDA寄存器&#xa;reg     [7:0]   R_load_data     ; // 发送/接收过程中加载的数据，比如设备物理地址，字地址和数据等&#xa;reg     [3:0]   R_bit_cnt       ; // 发送字节状态中bit个数计数&#xa;reg             R_ack_flag      ; // 应答标志&#xa;reg     [3:0]   R_jump_state    ; // 跳转状态，传输一个字节成功并应答以后通过这个变量跳转到导入下一个数据的状态&#xa;&#xa;wire            W_scl_low_mid   ; // SCL的低电平中间标志位&#xa;wire            W_scl_high_mid  ; // SCL的高电平中间标志位&#xa;wire            W_scl_neg        ; // SCL的下降沿标志位&#xa;wire &#x9;&#x9;&#x9;[6:0] I_dev_addr;&#xa;assign I_dev_addr=7'h30;//固定地址&#xa;assign O_sda_mode=R_sda_mode;&#xa;assign IO_sda  =  (R_sda_mode == 1'b1) ? R_sda_reg : 1'bz ;&#xa;&#xa;always @(posedge I_clk or negedge I_rst_n)&#xa;begin&#xa;    if(!I_rst_n)&#xa;        R_scl_cnt   &lt;=  10'd0 ; &#xa;    else if(R_scl_en)   &#xa;        begin&#xa;            if(R_scl_cnt == C_DIV_SELECT - 1'b1)&#xa;                R_scl_cnt &lt;= 10'd0 ;&#xa;            else&#xa;                R_scl_cnt &lt;= R_scl_cnt + 1'b1 ;     &#xa;        end&#xa;    else&#xa;        R_scl_cnt     &lt;= 10'd0 ;&#xa;end&#xa;&#xa;assign O_scl           = (R_scl_cnt &lt;= C_DIV_SELECT1) ? 1'b1 : 1'b0 ; // 产生串行时钟信号O_scl&#xa;assign W_scl_low_mid  = (R_scl_cnt == C_DIV_SELECT2) ? 1'b1 : 1'b0 ; // 产生scl低电平正中间标志位&#xa;assign W_scl_high_mid = (R_scl_cnt == C_DIV_SELECT0) ? 1'b1 : 1'b0 ; // 产生scl高电平正中间标志位&#xa;assign W_scl_neg       = (R_scl_cnt == C_DIV_SELECT3) ? 1'b1 : 1'b0 ; // 产生scl下降沿标志位&#xa;&#xa;always @(posedge I_clk or negedge I_rst_n)&#xa;begin&#xa;    if(!I_rst_n)&#xa;        begin&#xa;            R_state         &lt;=  4'd0 ;&#xa;            R_sda_mode      &lt;=  1'b1 ;&#xa;            R_sda_reg       &lt;=  1'b1 ;&#xa;            R_bit_cnt       &lt;=  4'd0 ;&#xa;            O_done_flag     &lt;=  1'b0 ;&#xa;            R_jump_state    &lt;=  4'd0 ;&#xa;            R_ack_flag        &lt;=    1'b0 ;&#xa;        end&#xa;    else if(I_iic_send_en) // 往IIC设备发送数据&#xa;        begin&#xa;            case(R_state)&#xa;                4'd0   : // 空闲状态设置SCL与SDA均为高&#xa;                    begin&#xa;                        R_sda_mode      &lt;=  1'b1 ; // 设置SDA为输出&#xa;                        R_sda_reg       &lt;=  1'b1 ; // 设置SDA为高电平&#xa;                        R_scl_en        &lt;=  1'b0 ; // 关闭SCL时钟线&#xa;                        R_state         &lt;=  4'd1 ; // 下一个状态是加载设备物理地址状态&#xa;                        R_bit_cnt       &lt;=  4'd0 ; // 发送字节状态中bit个数计数清零&#xa;                        O_done_flag     &lt;=  1'b0 ;&#xa;                        R_jump_state    &lt;=  4'd0 ;&#xa;                    end                               &#xa;                4'd1   :  // 加载IIC设备物理地址              &#xa;                    begin                             &#xa;                        R_load_data     &lt;=  {I_dev_addr, 1'b0}  ;&#xa;                        R_state         &lt;=  4'd4                ;&#xa;                        R_jump_state    &lt;=  4'd3                ;&#xa;                    end                                     &#xa;                4'd2   :;                                    &#xa;                4'd3   :    // 加载要发送的数据                    &#xa;                    begin                                   &#xa;                        R_load_data     &lt;=  I_write_data        ; &#xa;                        R_state         &lt;=  4'd5                ;&#xa;                        R_jump_state    &lt;=  4'd8                ;&#xa;                    end                                                         &#xa;                4'd4   :    // 发送起始信号                   &#xa;                    begin                                   &#xa;                        R_scl_en    &lt;=  1'b1                ; // 打开SCL时钟线&#xa;                        R_sda_mode  &lt;=  1'b1                ; // 设置SDA为输出&#xa;                        if(W_scl_high_mid)                  &#xa;                            begin                           &#xa;                                R_sda_reg   &lt;=  1'b0        ; // 在SCL高电平中间把SDA信号拉低,产生起始信号&#xa;                                R_state     &lt;=  4'd5        ; &#xa;                            end&#xa;                        else&#xa;                            R_state &lt;=  4'd4                ; // 如果SCL高电平中间标志没出现就一直在这个状态等着                          &#xa;                    end&#xa;                4'd5   :    // 发送1个字节，从高位开始发&#xa;                    begin&#xa;                        R_scl_en    &lt;=  1'b1                ; // 打开SCL时钟线&#xa;                        R_sda_mode  &lt;=  1'b1                ; // 设置SDA为输出&#xa;                        if(W_scl_low_mid)&#xa;                            begin&#xa;                                if(R_bit_cnt == 4'd8)&#xa;                                    begin&#xa;                                        R_bit_cnt   &lt;=  4'd0            ;&#xa;                                        R_state     &lt;=  4'd6            ; // 字节发完以后进入应答状态&#xa;                                    end&#xa;                                else&#xa;                                    begin                                 &#xa;                                        R_sda_reg   &lt;=  R_load_data[7-R_bit_cnt] ; // 先发送高位&#xa;                                        R_bit_cnt   &lt;=  R_bit_cnt + 1'b1         ; &#xa;                                    end&#xa;                            end&#xa;                        else&#xa;                            R_state &lt;=  4'd5 ; // 字节没发完时在这个状态一直等待 &#xa;                    end &#xa;                4'd6   :    // 接收应答状态的应答位&#xa;                    begin&#xa;                        R_scl_en    &lt;=  1'b1  ; // 打开SCL时钟线&#xa;                        R_sda_mode  &lt;=  1'b0  ; // 设置SDA为输入&#xa;                        if(W_scl_high_mid)&#xa;                            begin&#xa;                                R_ack_flag  &lt;=  IO_sda  ; &#xa;                                R_state     &lt;=  4'd7    ; &#xa;                            end                            &#xa;                        else&#xa;                            R_state &lt;=  4'd6  ;     &#xa;                    end&#xa;                4'd7  :    // 校验应答位&#xa;                    begin&#xa;                        R_scl_en    &lt;=  1'b1  ; // 打开SCL时钟线                        &#xa;                        if(R_ack_flag == 1'b0)    // 校验通过&#xa;                            begin&#xa;                                if(W_scl_neg == 1'b1) &#xa;                                    begin&#xa;                                        R_state &lt;=  R_jump_state ;&#xa;                                        R_sda_mode  &lt;=  1'b1 ; // 设置SDA的模式为输出&#xa;                                        R_sda_reg   &lt;=  1'b0 ; // 读取完应答信号以后要把SDA信号设置成输出并拉低，因为如果这个状&#xa;                                                               // 态后面是停止状态的话，需要SDA信号的上升沿，所以这里提前拉低它&#xa;                                    end&#xa;                                else&#xa;                                    R_state &lt;= 4'd7    ;&#xa;                            end&#xa;                        else&#xa;                            R_state &lt;=  4'd0 ;      &#xa;                    end&#xa;                4'd8   : // 发送停止信号&#xa;                    begin&#xa;                        R_scl_en    &lt;=  1'b1        ; // 打开SCL时钟线&#xa;                        R_sda_mode  &lt;=  1'b1        ; // 设置SDA为输出&#xa;                        if(W_scl_high_mid)&#xa;                            begin&#xa;                                R_sda_reg   &lt;=  1'b1 ;&#xa;                                R_state     &lt;=  4'd9 ;&#xa;                            end&#xa;                    end&#xa;                4'd9    :   // IIC写操作结束&#xa;                    begin&#xa;                        R_scl_en    &lt;=  1'b0 ; // 关闭SCL时钟线&#xa;                        R_sda_mode  &lt;=  1'b1 ; // 设置SDA为输出&#xa;                        R_sda_reg   &lt;=  1'b1 ; // 拉高SDA保持空闲状态情况&#xa;                        O_done_flag &lt;=  1'b1 ;&#xa;                        R_state     &lt;=  4'd0 ; &#xa;                        R_ack_flag  &lt;=  1'b0 ;&#xa;                    end  &#xa;                default    : R_state     &lt;=  4'd0 ; &#xa;            endcase&#xa;        end &#xa;    else&#xa;        begin&#xa;            R_state         &lt;=  4'd0 ;&#xa;            R_sda_mode      &lt;=  1'b1 ;&#xa;            R_sda_reg       &lt;=  1'b1 ;&#xa;            R_bit_cnt       &lt;=  4'd0 ;&#xa;            O_done_flag     &lt;=  1'b0 ;&#xa;            R_jump_state    &lt;=  4'd0 ;&#xa;            R_ack_flag      &lt;=  1'b0 ;&#xa;        end&#xa;end&#xa;&#xa;&#xa;" Type="model" Comment="">
  <Port Width="20" X="-0.20202" Side="left" Height="20" Function="" Name="I_clk" Connect="" Datasize="1" Datatype="wire" Color="#faebd7" Inout="input" Y="0.0935673" Parent="iic_send1"/>
  <Port Width="20" X="-0.20202" Side="left" Height="20" Function="" Name="I_rst_n" Connect="" Datasize="1" Datatype="wire" Color="#00ffff" Inout="input" Y="0.269006" Parent="iic_send1"/>
  <Port Width="20" X="-0.20202" Side="left" Height="20" Function="" Name="I_write_data" Connect="" Datasize="8" Datatype="wire" Color="#7fffd4" Inout="input" Y="0.432749" Parent="iic_send1"/>
  <Port Width="20" X="-0.20202" Side="left" Height="20" Function="" Name="I_iic_send_en" Connect="" Datasize="1" Datatype="wire" Color="#f0ffff" Inout="input" Y="0.584795" Parent="iic_send1"/>
  <Port Width="20" X="0.79798" Side="right" Height="20" Function="" Name="O_scl" Connect="" Datasize="1" Datatype="wire" Color="#f5f5dc" Inout="output" Y="0.0935673" Parent="iic_send1"/>
  <Port Width="20" X="0.79798" Side="right" Height="20" Function="" Name="O_done_flag" Connect="" Datasize="1" Datatype="reg" Color="#ffe4c4" Inout="output" Y="0.432749" Parent="iic_send1"/>
  <Port Width="20" X="0.79798" Side="right" Height="20" Function="" Name="O_sda_mode" Connect="" Datasize="1" Datatype="wire" Color="#b8860b" Inout="output" Y="0.584795" Parent="iic_send1"/>
  <Port Width="20" X="0.79798" Side="right" Height="20" Function="" Name="IO_sda" Connect="" Datasize="1" Datatype="wire" Color="#ffebcd" Inout="inout" Y="0.269006" Parent="iic_send1"/>
 </Module>
 <Module Width="160" X="578.265" File="Current/play_qianjin.model" Include="" Height="160" Name="play_qianjin3" Parameters="" Class="play_qianjin" Color="#d3d3d3" Y="163.052" Parent="voice_play_cptBlock" Code="reg [3:0]state;&#xa;always@(posedge I_clk,negedge I_rst_n)//状态机负责切换发送的数据&#xa;begin&#xa;if(!I_rst_n)&#xa;&#x9;begin&#xa;&#x9;&#x9;state&lt;=4'd0;&#xa;&#x9;&#x9;O_data&lt;=8'hfd;&#xa;&#x9;&#x9;O_iic_send_en&lt;=1;&#xa;&#x9;&#x9;O_Byte_done&lt;=0;&#xa;&#x9;end&#xa;else&#xa;if(I_en)&#xa;&#x9;begin&#xa;&#x9;case(state)&#xa;&#x9;4'd0:begin&#xa;&#x9;&#x9;&#x9;O_data&lt;=8'hfd;//第1个要发送的数据&#xa;&#x9;&#x9;&#x9;if(I_done_flag)&#xa;&#x9;&#x9;&#x9;&#x9;&#x9;state&lt;=state+1;&#xa;&#x9;&#x9;&#x9;else&#xa;&#x9;&#x9;&#x9;&#x9;&#x9;state&lt;=state;&#xa;&#x9;&#x9;&#x9;end&#xa;&#x9;4'd1:begin&#xa;&#x9;&#x9;&#x9;O_data&lt;=8'h0;//第2个要发送的数据&#xa;&#x9;&#x9;&#x9;if(I_done_flag)&#xa;&#x9;&#x9;&#x9;&#x9;&#x9;state&lt;=state+1;&#xa;&#x9;&#x9;&#x9;else&#xa;&#x9;&#x9;&#x9;&#x9;&#x9;state&lt;=state;&#xa;&#x9;&#x9;&#x9;end&#xa;&#x9;4'd2:begin&#xa;&#x9;&#x9;&#x9;O_data&lt;=8'h0b;//第3个要发送的数据&#xa;&#x9;&#x9;&#x9;if(I_done_flag)&#xa;&#x9;&#x9;&#x9;&#x9;&#x9;state&lt;=state+1;&#xa;&#x9;&#x9;&#x9;else&#xa;&#x9;&#x9;&#x9;&#x9;&#x9;state&lt;=state;&#xa;&#x9;&#x9;&#x9;end&#xa;&#x9;4'd3:begin&#xa;&#x9;&#x9;&#x9;O_data&lt;=8'h01;//第4个要发送的数据&#xa;&#x9;&#x9;&#x9;if(I_done_flag)&#xa;&#x9;&#x9;&#x9;&#x9;&#x9;state&lt;=state+1;&#xa;&#x9;&#x9;&#x9;else&#xa;&#x9;&#x9;&#x9;&#x9;&#x9;state&lt;=state;&#xa;&#x9;&#x9;&#x9;end&#xa;&#x9;4'd4:begin&#xa;&#x9;&#x9;&#x9;O_data&lt;=8'h0;//第5个要发送的数据&#xa;&#x9;&#x9;&#x9;if(I_done_flag)&#xa;&#x9;&#x9;&#x9;&#x9;&#x9;state&lt;=state+1;&#xa;&#x9;&#x9;&#x9;else&#xa;&#x9;&#x9;&#x9;&#x9;&#x9;state&lt;=state;&#xa;&#x9;&#x9;&#x9;end&#xa;&#x9;4'd5:begin&#xa;&#x9;&#x9;&#x9;O_data&lt;=8'h71;//第6个要发送的数据&#xa;&#x9;&#x9;&#x9;if(I_done_flag)&#xa;&#x9;&#x9;&#x9;&#x9;&#x9;state&lt;=state+1;&#xa;&#x9;&#x9;&#x9;else&#xa;&#x9;&#x9;&#x9;&#x9;&#x9;state&lt;=state;&#xa;&#x9;&#x9;&#x9;end&#xa;&#x9;4'd6:begin&#xa;&#x9;&#x9;&#x9;O_data&lt;=8'h69;//第7个要发送的数据&#xa;&#x9;&#x9;&#x9;if(I_done_flag)&#xa;&#x9;&#x9;&#x9;&#x9;&#x9;state&lt;=state+1;&#xa;&#x9;&#x9;&#x9;else&#xa;&#x9;&#x9;&#x9;&#x9;&#x9;state&lt;=state;&#xa;&#x9;&#x9;&#x9;end&#xa;&#x9;4'd7:begin&#xa;&#x9;&#x9;&#x9;O_data&lt;=8'h61;//第8个要发送的数据&#xa;&#x9;&#x9;&#x9;if(I_done_flag)&#xa;&#x9;&#x9;&#x9;&#x9;&#x9;state&lt;=state+1;&#xa;&#x9;&#x9;&#x9;else&#xa;&#x9;&#x9;&#x9;&#x9;&#x9;state&lt;=state;&#xa;&#x9;&#x9;&#x9;end&#xa;&#x9;4'd8:begin&#xa;&#x9;&#x9;&#x9;O_data&lt;=8'h6e;//第9个要发送的数据&#xa;&#x9;&#x9;&#x9;if(I_done_flag)&#xa;&#x9;&#x9;&#x9;&#x9;&#x9;state&lt;=state+1;&#xa;&#x9;&#x9;&#x9;else&#xa;&#x9;&#x9;&#x9;&#x9;&#x9;state&lt;=state;&#xa;&#x9;&#x9;&#x9;end&#xa;&#x9;4'd9:begin&#xa;&#x9;&#x9;&#x9;O_data&lt;=8'h33;//第10个要发送的数据&#xa;&#x9;&#x9;&#x9;if(I_done_flag)&#xa;&#x9;&#x9;&#x9;&#x9;&#x9;state&lt;=state+1;&#xa;&#x9;&#x9;&#x9;else&#xa;&#x9;&#x9;&#x9;&#x9;&#x9;state&lt;=state;&#xa;&#x9;&#x9;&#x9;end&#xa;&#x9;4'd10:begin&#xa;&#x9;&#x9;&#x9;O_data&lt;=8'h6a;//第11个要发送的数据&#xa;&#x9;&#x9;&#x9;if(I_done_flag)&#xa;&#x9;&#x9;&#x9;&#x9;&#x9;state&lt;=state+1;&#xa;&#x9;&#x9;&#x9;else&#xa;&#x9;&#x9;&#x9;&#x9;&#x9;state&lt;=state;&#xa;&#x9;&#x9;&#x9;end&#xa;&#x9;4'd11:begin&#xa;&#x9;&#x9;&#x9;O_data&lt;=8'h69;//第12个要发送的数据&#xa;&#x9;&#x9;&#x9;if(I_done_flag)&#xa;&#x9;&#x9;&#x9;&#x9;&#x9;state&lt;=state+1;&#xa;&#x9;&#x9;&#x9;else&#xa;&#x9;&#x9;&#x9;&#x9;&#x9;state&lt;=state;&#xa;&#x9;&#x9;&#x9;end&#xa;&#x9;4'd12:begin&#xa;&#x9;&#x9;&#x9;O_data&lt;=8'h6e;//第13个要发送的数据&#xa;&#x9;&#x9;&#x9;if(I_done_flag)&#xa;&#x9;&#x9;&#x9;&#x9;&#x9;state&lt;=state+1;&#xa;&#x9;&#x9;&#x9;else&#xa;&#x9;&#x9;&#x9;&#x9;&#x9;state&lt;=state;&#xa;&#x9;&#x9;&#x9;end&#xa;&#x9;4'd13:begin&#xa;&#x9;&#x9;&#x9;O_data&lt;=8'h34;//第14个要发送的数据&#xa;&#x9;&#x9;&#x9;if(I_done_flag)&#xa;&#x9;&#x9;&#x9;&#x9;&#x9;state&lt;=state+1;&#xa;&#x9;&#x9;&#x9;else&#xa;&#x9;&#x9;&#x9;&#x9;&#x9;state&lt;=state;&#xa;&#x9;&#x9;&#x9;end&#xa;&#x9;4'd14:begin&#xa;&#x9;&#x9;&#x9;if(I_done_flag)//发送结束&#xa;&#x9;&#x9;&#x9;//进行复位&#xa;&#x9;&#x9;&#x9;begin&#xa;&#x9;&#x9;&#x9;&#x9;&#x9;O_iic_send_en&lt;=0;&#xa;&#x9;&#x9;&#x9;&#x9;&#x9;O_Byte_done&lt;=1;&#xa;&#x9;&#x9;&#x9;end&#xa;&#x9;&#x9;&#x9;else&#xa;&#x9;&#x9;&#x9;&#x9;&#x9;state&lt;=state;&#xa;&#x9;end&#x9;&#x9;&#xa;&#x9;default:;&#xa;&#x9;endcase&#xa;&#x9;end&#xa;end&#xa;&#xa;&#xa;&#xa;&#xa;&#xa;" Type="model" Comment="">
  <Port Width="20" X="-0.125" Side="left" Height="20" Function="" Name="I_clk" Connect="" Datasize="1" Datatype="wire" Color="#faebd7" Inout="input" Y="0.1" Parent="play_qianjin3"/>
  <Port Width="20" X="-0.125" Side="left" Height="20" Function="" Name="I_en" Connect="" Datasize="1" Datatype="wire" Color="#00ffff" Inout="input" Y="0.2625" Parent="play_qianjin3"/>
  <Port Width="20" X="-0.125" Side="left" Height="20" Function="" Name="I_rst_n" Connect="" Datasize="1" Datatype="wire" Color="#7fffd4" Inout="input" Y="0.425" Parent="play_qianjin3"/>
  <Port Width="20" X="-0.125" Side="left" Height="20" Function="" Name="I_done_flag" Connect="" Datasize="1" Datatype="wire" Color="#f0ffff" Inout="input" Y="0.5875" Parent="play_qianjin3"/>
  <Port Width="20" X="0.875" Side="right" Height="20" Function="" Name="O_data" Connect="" Datasize="8" Datatype="reg" Color="#f5f5dc" Inout="output" Y="0.1375" Parent="play_qianjin3"/>
  <Port Width="20" X="0.875" Side="right" Height="20" Function="" Name="O_iic_send_en" Connect="" Datasize="1" Datatype="reg" Color="#ffe4c4" Inout="output" Y="0.3375" Parent="play_qianjin3"/>
  <Port Width="20" X="0.875" Side="right" Height="20" Function="" Name="O_Byte_done" Connect="" Datasize="1" Datatype="reg" Color="#b8860b" Inout="output" Y="0.5375" Parent="play_qianjin3"/>
 </Module>
 <Module Width="160" X="668.076" File="Current/play_tingzhi.model" Include="" Height="160" Name="play_tingzhi4" Parameters="" Class="play_tingzhi" Color="#d3d3d3" Y="375.205" Parent="voice_play_cptBlock" Code="reg [3:0]state;&#xa;always@(posedge I_clk,negedge I_rst_n)//状态机负责切换发送的数据&#xa;begin&#xa;if(!I_rst_n)&#xa;&#x9;begin&#xa;&#x9;&#x9;state&lt;=4'd0;&#xa;&#x9;&#x9;O_data&lt;=8'hfd;&#xa;&#x9;&#x9;O_iic_send_en&lt;=1;&#xa;&#x9;&#x9;O_Byte_done&lt;=0;&#xa;&#x9;end&#xa;else&#xa;if(I_en)&#xa;&#x9;begin&#xa;&#x9;case(state)&#xa;&#x9;4'd0:begin&#xa;&#x9;&#x9;&#x9;O_data&lt;=8'hfd;//第1个要发送的数据&#xa;&#x9;&#x9;&#x9;if(I_done_flag)&#xa;&#x9;&#x9;&#x9;&#x9;&#x9;state&lt;=state+1;&#xa;&#x9;&#x9;&#x9;else&#xa;&#x9;&#x9;&#x9;&#x9;&#x9;state&lt;=state;&#xa;&#x9;&#x9;&#x9;end&#xa;&#x9;4'd1:begin&#xa;&#x9;&#x9;&#x9;O_data&lt;=8'h0;//第2个要发送的数据&#xa;&#x9;&#x9;&#x9;if(I_done_flag)&#xa;&#x9;&#x9;&#x9;&#x9;&#x9;state&lt;=state+1;&#xa;&#x9;&#x9;&#x9;else&#xa;&#x9;&#x9;&#x9;&#x9;&#x9;state&lt;=state;&#xa;&#x9;&#x9;&#x9;end&#xa;&#x9;4'd2:begin&#xa;&#x9;&#x9;&#x9;O_data&lt;=8'h0b;//第3个要发送的数据&#xa;&#x9;&#x9;&#x9;if(I_done_flag)&#xa;&#x9;&#x9;&#x9;&#x9;&#x9;state&lt;=state+1;&#xa;&#x9;&#x9;&#x9;else&#xa;&#x9;&#x9;&#x9;&#x9;&#x9;state&lt;=state;&#xa;&#x9;&#x9;&#x9;end&#xa;&#x9;4'd3:begin&#xa;&#x9;&#x9;&#x9;O_data&lt;=8'h01;//第4个要发送的数据&#xa;&#x9;&#x9;&#x9;if(I_done_flag)&#xa;&#x9;&#x9;&#x9;&#x9;&#x9;state&lt;=state+1;&#xa;&#x9;&#x9;&#x9;else&#xa;&#x9;&#x9;&#x9;&#x9;&#x9;state&lt;=state;&#xa;&#x9;&#x9;&#x9;end&#xa;&#x9;4'd4:begin&#xa;&#x9;&#x9;&#x9;O_data&lt;=8'h0;//第5个要发送的数据&#xa;&#x9;&#x9;&#x9;if(I_done_flag)&#xa;&#x9;&#x9;&#x9;&#x9;&#x9;state&lt;=state+1;&#xa;&#x9;&#x9;&#x9;else&#xa;&#x9;&#x9;&#x9;&#x9;&#x9;state&lt;=state;&#xa;&#x9;&#x9;&#x9;end&#xa;&#x9;4'd5:begin&#xa;&#x9;&#x9;&#x9;O_data&lt;=8'h74;//第6个要发送的数据&#xa;&#x9;&#x9;&#x9;if(I_done_flag)&#xa;&#x9;&#x9;&#x9;&#x9;&#x9;state&lt;=state+1;&#xa;&#x9;&#x9;&#x9;else&#xa;&#x9;&#x9;&#x9;&#x9;&#x9;state&lt;=state;&#xa;&#x9;&#x9;&#x9;end&#xa;&#x9;4'd6:begin&#xa;&#x9;&#x9;&#x9;O_data&lt;=8'h69;//第7个要发送的数据&#xa;&#x9;&#x9;&#x9;if(I_done_flag)&#xa;&#x9;&#x9;&#x9;&#x9;&#x9;state&lt;=state+1;&#xa;&#x9;&#x9;&#x9;else&#xa;&#x9;&#x9;&#x9;&#x9;&#x9;state&lt;=state;&#xa;&#x9;&#x9;&#x9;end&#xa;&#x9;4'd7:begin&#xa;&#x9;&#x9;&#x9;O_data&lt;=8'h6e;//第8个要发送的数据&#xa;&#x9;&#x9;&#x9;if(I_done_flag)&#xa;&#x9;&#x9;&#x9;&#x9;&#x9;state&lt;=state+1;&#xa;&#x9;&#x9;&#x9;else&#xa;&#x9;&#x9;&#x9;&#x9;&#x9;state&lt;=state;&#xa;&#x9;&#x9;&#x9;end&#xa;&#x9;4'd8:begin&#xa;&#x9;&#x9;&#x9;O_data&lt;=8'h67;//第9个要发送的数据&#xa;&#x9;&#x9;&#x9;if(I_done_flag)&#xa;&#x9;&#x9;&#x9;&#x9;&#x9;state&lt;=state+1;&#xa;&#x9;&#x9;&#x9;else&#xa;&#x9;&#x9;&#x9;&#x9;&#x9;state&lt;=state;&#xa;&#x9;&#x9;&#x9;end&#xa;&#x9;4'd9:begin&#xa;&#x9;&#x9;&#x9;O_data&lt;=8'h33;//第10个要发送的数据&#xa;&#x9;&#x9;&#x9;if(I_done_flag)&#xa;&#x9;&#x9;&#x9;&#x9;&#x9;state&lt;=state+1;&#xa;&#x9;&#x9;&#x9;else&#xa;&#x9;&#x9;&#x9;&#x9;&#x9;state&lt;=state;&#xa;&#x9;&#x9;&#x9;end&#xa;&#x9;4'd10:begin&#xa;&#x9;&#x9;&#x9;O_data&lt;=8'h7a;//第11个要发送的数据&#xa;&#x9;&#x9;&#x9;if(I_done_flag)&#xa;&#x9;&#x9;&#x9;&#x9;&#x9;state&lt;=state+1;&#xa;&#x9;&#x9;&#x9;else&#xa;&#x9;&#x9;&#x9;&#x9;&#x9;state&lt;=state;&#xa;&#x9;&#x9;&#x9;end&#xa;&#x9;4'd11:begin&#xa;&#x9;&#x9;&#x9;O_data&lt;=8'h68;//第12个要发送的数据&#xa;&#x9;&#x9;&#x9;if(I_done_flag)&#xa;&#x9;&#x9;&#x9;&#x9;&#x9;state&lt;=state+1;&#xa;&#x9;&#x9;&#x9;else&#xa;&#x9;&#x9;&#x9;&#x9;&#x9;state&lt;=state;&#xa;&#x9;&#x9;&#x9;end&#xa;&#x9;4'd12:begin&#xa;&#x9;&#x9;&#x9;O_data&lt;=8'h69;//第13个要发送的数据&#xa;&#x9;&#x9;&#x9;if(I_done_flag)&#xa;&#x9;&#x9;&#x9;&#x9;&#x9;state&lt;=state+1;&#xa;&#x9;&#x9;&#x9;else&#xa;&#x9;&#x9;&#x9;&#x9;&#x9;state&lt;=state;&#xa;&#x9;&#x9;&#x9;end&#xa;&#x9;4'd13:begin&#xa;&#x9;&#x9;&#x9;O_data&lt;=8'h32;//第14个要发送的数据&#xa;&#x9;&#x9;&#x9;if(I_done_flag)&#xa;&#x9;&#x9;&#x9;&#x9;&#x9;state&lt;=state+1;&#xa;&#x9;&#x9;&#x9;else&#xa;&#x9;&#x9;&#x9;&#x9;&#x9;state&lt;=state;&#xa;&#x9;&#x9;&#x9;end&#xa;&#x9;4'd14:begin&#xa;&#x9;&#x9;&#x9;if(I_done_flag)//发送结束&#xa;&#x9;&#x9;&#x9;//进行复位&#xa;&#x9;&#x9;&#x9;begin&#xa;&#x9;&#x9;&#x9;&#x9;&#x9;O_iic_send_en&lt;=0;&#xa;&#x9;&#x9;&#x9;&#x9;&#x9;O_Byte_done&lt;=1;&#xa;&#x9;&#x9;&#x9;end&#xa;&#x9;&#x9;&#x9;else&#xa;&#x9;&#x9;&#x9;&#x9;&#x9;state&lt;=state;&#xa;&#x9;end&#x9;&#x9;&#xa;&#x9;default:;&#xa;&#x9;endcase&#xa;&#x9;end&#xa;end&#xa;&#xa;&#xa;&#xa;&#xa;&#xa;" Type="model" Comment="">
  <Port Width="20" X="-0.125" Side="left" Height="20" Function="" Name="I_clk" Connect="" Datasize="1" Datatype="wire" Color="#faebd7" Inout="input" Y="0.1" Parent="play_tingzhi4"/>
  <Port Width="20" X="-0.125" Side="left" Height="20" Function="" Name="I_en" Connect="" Datasize="1" Datatype="wire" Color="#00ffff" Inout="input" Y="0.2625" Parent="play_tingzhi4"/>
  <Port Width="20" X="-0.125" Side="left" Height="20" Function="" Name="I_rst_n" Connect="" Datasize="1" Datatype="wire" Color="#7fffd4" Inout="input" Y="0.425" Parent="play_tingzhi4"/>
  <Port Width="20" X="-0.125" Side="left" Height="20" Function="" Name="I_done_flag" Connect="" Datasize="1" Datatype="wire" Color="#f0ffff" Inout="input" Y="0.5875" Parent="play_tingzhi4"/>
  <Port Width="20" X="0.875" Side="right" Height="20" Function="" Name="O_data" Connect="" Datasize="8" Datatype="reg" Color="#f5f5dc" Inout="output" Y="0.1375" Parent="play_tingzhi4"/>
  <Port Width="20" X="0.875" Side="right" Height="20" Function="" Name="O_iic_send_en" Connect="" Datasize="1" Datatype="reg" Color="#ffe4c4" Inout="output" Y="0.3375" Parent="play_tingzhi4"/>
  <Port Width="20" X="0.875" Side="right" Height="20" Function="" Name="O_Byte_done" Connect="" Datasize="1" Datatype="reg" Color="#b8860b" Inout="output" Y="0.5375" Parent="play_tingzhi4"/>
 </Module>
 <Module Width="160" X="608.646" File="Current/play_youzhuan.model" Include="" Height="160" Name="play_youzhuan5" Parameters="" Class="play_youzhuan" Color="#d3d3d3" Y="768" Parent="voice_play_cptBlock" Code="reg [3:0]state;&#xa;always@(posedge I_clk,negedge I_rst_n)//状态机负责切换发送的数据&#xa;begin&#xa;if(!I_rst_n)&#xa;&#x9;begin&#xa;&#x9;&#x9;state&lt;=4'd0;&#xa;&#x9;&#x9;O_data&lt;=8'hfd;&#xa;&#x9;&#x9;O_iic_send_en&lt;=1;&#xa;&#x9;&#x9;O_Byte_done&lt;=0;&#xa;&#x9;end&#xa;else&#xa;if(I_en)&#xa;&#x9;begin&#xa;&#x9;case(state)&#xa;&#x9;4'd0:begin&#xa;&#x9;&#x9;&#x9;O_data&lt;=8'hfd;//第1个要发送的数据&#xa;&#x9;&#x9;&#x9;if(I_done_flag)&#xa;&#x9;&#x9;&#x9;&#x9;&#x9;state&lt;=state+1;&#xa;&#x9;&#x9;&#x9;else&#xa;&#x9;&#x9;&#x9;&#x9;&#x9;state&lt;=state;&#xa;&#x9;&#x9;&#x9;end&#xa;&#x9;4'd1:begin&#xa;&#x9;&#x9;&#x9;O_data&lt;=8'h0;//第2个要发送的数据&#xa;&#x9;&#x9;&#x9;if(I_done_flag)&#xa;&#x9;&#x9;&#x9;&#x9;&#x9;state&lt;=state+1;&#xa;&#x9;&#x9;&#x9;else&#xa;&#x9;&#x9;&#x9;&#x9;&#x9;state&lt;=state;&#xa;&#x9;&#x9;&#x9;end&#xa;&#x9;4'd2:begin&#xa;&#x9;&#x9;&#x9;O_data&lt;=8'h0c;//第3个要发送的数据&#xa;&#x9;&#x9;&#x9;if(I_done_flag)&#xa;&#x9;&#x9;&#x9;&#x9;&#x9;state&lt;=state+1;&#xa;&#x9;&#x9;&#x9;else&#xa;&#x9;&#x9;&#x9;&#x9;&#x9;state&lt;=state;&#xa;&#x9;&#x9;&#x9;end&#xa;&#x9;4'd3:begin&#xa;&#x9;&#x9;&#x9;O_data&lt;=8'h01;//第4个要发送的数据&#xa;&#x9;&#x9;&#x9;if(I_done_flag)&#xa;&#x9;&#x9;&#x9;&#x9;&#x9;state&lt;=state+1;&#xa;&#x9;&#x9;&#x9;else&#xa;&#x9;&#x9;&#x9;&#x9;&#x9;state&lt;=state;&#xa;&#x9;&#x9;&#x9;end&#xa;&#x9;4'd4:begin&#xa;&#x9;&#x9;&#x9;O_data&lt;=8'h0;//第5个要发送的数据&#xa;&#x9;&#x9;&#x9;if(I_done_flag)&#xa;&#x9;&#x9;&#x9;&#x9;&#x9;state&lt;=state+1;&#xa;&#x9;&#x9;&#x9;else&#xa;&#x9;&#x9;&#x9;&#x9;&#x9;state&lt;=state;&#xa;&#x9;&#x9;&#x9;end&#xa;&#x9;4'd5:begin&#xa;&#x9;&#x9;&#x9;O_data&lt;=8'h79;//第6个要发送的数据&#xa;&#x9;&#x9;&#x9;if(I_done_flag)&#xa;&#x9;&#x9;&#x9;&#x9;&#x9;state&lt;=state+1;&#xa;&#x9;&#x9;&#x9;else&#xa;&#x9;&#x9;&#x9;&#x9;&#x9;state&lt;=state;&#xa;&#x9;&#x9;&#x9;end&#xa;&#x9;4'd6:begin&#xa;&#x9;&#x9;&#x9;O_data&lt;=8'h6f;//第7个要发送的数据&#xa;&#x9;&#x9;&#x9;if(I_done_flag)&#xa;&#x9;&#x9;&#x9;&#x9;&#x9;state&lt;=state+1;&#xa;&#x9;&#x9;&#x9;else&#xa;&#x9;&#x9;&#x9;&#x9;&#x9;state&lt;=state;&#xa;&#x9;&#x9;&#x9;end&#xa;&#x9;4'd7:begin&#xa;&#x9;&#x9;&#x9;O_data&lt;=8'h75;//第8个要发送的数据&#xa;&#x9;&#x9;&#x9;if(I_done_flag)&#xa;&#x9;&#x9;&#x9;&#x9;&#x9;state&lt;=state+1;&#xa;&#x9;&#x9;&#x9;else&#xa;&#x9;&#x9;&#x9;&#x9;&#x9;state&lt;=state;&#xa;&#x9;&#x9;&#x9;end&#xa;&#x9;4'd8:begin&#xa;&#x9;&#x9;&#x9;O_data&lt;=8'h34;//第9个要发送的数据&#xa;&#x9;&#x9;&#x9;if(I_done_flag)&#xa;&#x9;&#x9;&#x9;&#x9;&#x9;state&lt;=state+1;&#xa;&#x9;&#x9;&#x9;else&#xa;&#x9;&#x9;&#x9;&#x9;&#x9;state&lt;=state;&#xa;&#x9;&#x9;&#x9;end&#xa;&#x9;4'd9:begin&#xa;&#x9;&#x9;&#x9;O_data&lt;=8'h7a;//第10个要发送的数据&#xa;&#x9;&#x9;&#x9;if(I_done_flag)&#xa;&#x9;&#x9;&#x9;&#x9;&#x9;state&lt;=state+1;&#xa;&#x9;&#x9;&#x9;else&#xa;&#x9;&#x9;&#x9;&#x9;&#x9;state&lt;=state;&#xa;&#x9;&#x9;&#x9;end&#xa;&#x9;4'd10:begin&#xa;&#x9;&#x9;&#x9;O_data&lt;=8'h68;//第11个要发送的数据&#xa;&#x9;&#x9;&#x9;if(I_done_flag)&#xa;&#x9;&#x9;&#x9;&#x9;&#x9;state&lt;=state+1;&#xa;&#x9;&#x9;&#x9;else&#xa;&#x9;&#x9;&#x9;&#x9;&#x9;state&lt;=state;&#xa;&#x9;&#x9;&#x9;end&#xa;&#x9;4'd11:begin&#xa;&#x9;&#x9;&#x9;O_data&lt;=8'h75;//第12个要发送的数据&#xa;&#x9;&#x9;&#x9;if(I_done_flag)&#xa;&#x9;&#x9;&#x9;&#x9;&#x9;state&lt;=state+1;&#xa;&#x9;&#x9;&#x9;else&#xa;&#x9;&#x9;&#x9;&#x9;&#x9;state&lt;=state;&#xa;&#x9;&#x9;&#x9;end&#xa;&#x9;4'd12:begin&#xa;&#x9;&#x9;&#x9;O_data&lt;=8'h61;//第13个要发送的数据&#xa;&#x9;&#x9;&#x9;if(I_done_flag)&#xa;&#x9;&#x9;&#x9;&#x9;&#x9;state&lt;=state+1;&#xa;&#x9;&#x9;&#x9;else&#xa;&#x9;&#x9;&#x9;&#x9;&#x9;state&lt;=state;&#xa;&#x9;&#x9;&#x9;end&#xa;&#x9;4'd13:begin&#xa;&#x9;&#x9;&#x9;O_data&lt;=8'h6e;//第14个要发送的数据&#xa;&#x9;&#x9;&#x9;if(I_done_flag)&#xa;&#x9;&#x9;&#x9;&#x9;&#x9;state&lt;=state+1;&#xa;&#x9;&#x9;&#x9;else&#xa;&#x9;&#x9;&#x9;&#x9;&#x9;state&lt;=state;&#xa;&#x9;&#x9;&#x9;end&#xa;&#x9;4'd14:begin&#xa;&#x9;&#x9;&#x9;O_data&lt;=8'h32;//第15个要发送的数据&#xa;&#x9;&#x9;&#x9;if(I_done_flag)&#xa;&#x9;&#x9;&#x9;&#x9;&#x9;state&lt;=state+1;&#xa;&#x9;&#x9;&#x9;else&#xa;&#x9;&#x9;&#x9;&#x9;&#x9;state&lt;=state;&#xa;&#x9;&#x9;&#x9;end&#xa;&#x9;4'd15:begin&#xa;&#x9;&#x9;&#x9;if(I_done_flag)//发送结束&#xa;&#x9;&#x9;&#x9;//进行复位&#xa;&#x9;&#x9;&#x9;begin&#xa;&#x9;&#x9;&#x9;&#x9;&#x9;O_iic_send_en&lt;=0;&#xa;&#x9;&#x9;&#x9;&#x9;&#x9;O_Byte_done&lt;=1;&#xa;&#x9;&#x9;&#x9;end&#xa;&#x9;&#x9;&#x9;else&#xa;&#x9;&#x9;&#x9;&#x9;&#x9;state&lt;=state;&#xa;&#x9;end&#x9;&#x9;&#xa;&#x9;default:;&#xa;&#x9;endcase&#xa;&#x9;end&#xa;end&#xa;&#xa;&#xa;&#xa;&#xa;&#xa;" Type="model" Comment="">
  <Port Width="20" X="-0.125" Side="left" Height="20" Function="" Name="I_clk" Connect="" Datasize="1" Datatype="wire" Color="#faebd7" Inout="input" Y="0.1" Parent="play_youzhuan5"/>
  <Port Width="20" X="-0.125" Side="left" Height="20" Function="" Name="I_en" Connect="" Datasize="1" Datatype="wire" Color="#00ffff" Inout="input" Y="0.2625" Parent="play_youzhuan5"/>
  <Port Width="20" X="-0.125" Side="left" Height="20" Function="" Name="I_rst_n" Connect="" Datasize="1" Datatype="wire" Color="#7fffd4" Inout="input" Y="0.425" Parent="play_youzhuan5"/>
  <Port Width="20" X="-0.125" Side="left" Height="20" Function="" Name="I_done_flag" Connect="" Datasize="1" Datatype="wire" Color="#f0ffff" Inout="input" Y="0.5875" Parent="play_youzhuan5"/>
  <Port Width="20" X="0.875" Side="right" Height="20" Function="" Name="O_data" Connect="" Datasize="8" Datatype="reg" Color="#f5f5dc" Inout="output" Y="0.1375" Parent="play_youzhuan5"/>
  <Port Width="20" X="0.875" Side="right" Height="20" Function="" Name="O_iic_send_en" Connect="" Datasize="1" Datatype="reg" Color="#ffe4c4" Inout="output" Y="0.3375" Parent="play_youzhuan5"/>
  <Port Width="20" X="0.875" Side="right" Height="20" Function="" Name="O_Byte_done" Connect="" Datasize="1" Datatype="reg" Color="#b8860b" Inout="output" Y="0.5375" Parent="play_youzhuan5"/>
 </Module>
 <Module Width="160" X="589.189" File="Current/play_zuozhuan.model" Include="" Height="160" Name="play_zuozhuan6" Parameters="" Class="play_zuozhuan" Color="#d3d3d3" Y="574.054" Parent="voice_play_cptBlock" Code="reg [3:0]state;&#xa;always@(posedge I_clk,negedge I_rst_n)//状态机负责切换发送的数据&#xa;begin&#xa;if(!I_rst_n)&#xa;&#x9;begin&#xa;&#x9;&#x9;state&lt;=4'd0;&#xa;&#x9;&#x9;O_data&lt;=8'hfd;&#xa;&#x9;&#x9;O_iic_send_en&lt;=1;&#xa;&#x9;&#x9;O_Byte_done&lt;=0;&#xa;&#x9;end&#xa;else&#xa;if(I_en)&#xa;&#x9;begin&#xa;&#x9;case(state)&#xa;&#x9;4'd0:begin&#xa;&#x9;&#x9;&#x9;O_data&lt;=8'hfd;//第1个要发送的数据&#xa;&#x9;&#x9;&#x9;if(I_done_flag)&#xa;&#x9;&#x9;&#x9;&#x9;&#x9;state&lt;=state+1;&#xa;&#x9;&#x9;&#x9;else&#xa;&#x9;&#x9;&#x9;&#x9;&#x9;state&lt;=state;&#xa;&#x9;&#x9;&#x9;end&#xa;&#x9;4'd1:begin&#xa;&#x9;&#x9;&#x9;O_data&lt;=8'h0;//第2个要发送的数据&#xa;&#x9;&#x9;&#x9;if(I_done_flag)&#xa;&#x9;&#x9;&#x9;&#x9;&#x9;state&lt;=state+1;&#xa;&#x9;&#x9;&#x9;else&#xa;&#x9;&#x9;&#x9;&#x9;&#x9;state&lt;=state;&#xa;&#x9;&#x9;&#x9;end&#xa;&#x9;4'd2:begin&#xa;&#x9;&#x9;&#x9;O_data&lt;=8'h0c;//第3个要发送的数据&#xa;&#x9;&#x9;&#x9;if(I_done_flag)&#xa;&#x9;&#x9;&#x9;&#x9;&#x9;state&lt;=state+1;&#xa;&#x9;&#x9;&#x9;else&#xa;&#x9;&#x9;&#x9;&#x9;&#x9;state&lt;=state;&#xa;&#x9;&#x9;&#x9;end&#xa;&#x9;4'd3:begin&#xa;&#x9;&#x9;&#x9;O_data&lt;=8'h01;//第4个要发送的数据&#xa;&#x9;&#x9;&#x9;if(I_done_flag)&#xa;&#x9;&#x9;&#x9;&#x9;&#x9;state&lt;=state+1;&#xa;&#x9;&#x9;&#x9;else&#xa;&#x9;&#x9;&#x9;&#x9;&#x9;state&lt;=state;&#xa;&#x9;&#x9;&#x9;end&#xa;&#x9;4'd4:begin&#xa;&#x9;&#x9;&#x9;O_data&lt;=8'h0;//第5个要发送的数据&#xa;&#x9;&#x9;&#x9;if(I_done_flag)&#xa;&#x9;&#x9;&#x9;&#x9;&#x9;state&lt;=state+1;&#xa;&#x9;&#x9;&#x9;else&#xa;&#x9;&#x9;&#x9;&#x9;&#x9;state&lt;=state;&#xa;&#x9;&#x9;&#x9;end&#xa;&#x9;4'd5:begin&#xa;&#x9;&#x9;&#x9;O_data&lt;=8'h7a;//第6个要发送的数据&#xa;&#x9;&#x9;&#x9;if(I_done_flag)&#xa;&#x9;&#x9;&#x9;&#x9;&#x9;state&lt;=state+1;&#xa;&#x9;&#x9;&#x9;else&#xa;&#x9;&#x9;&#x9;&#x9;&#x9;state&lt;=state;&#xa;&#x9;&#x9;&#x9;end&#xa;&#x9;4'd6:begin&#xa;&#x9;&#x9;&#x9;O_data&lt;=8'h75;//第7个要发送的数据&#xa;&#x9;&#x9;&#x9;if(I_done_flag)&#xa;&#x9;&#x9;&#x9;&#x9;&#x9;state&lt;=state+1;&#xa;&#x9;&#x9;&#x9;else&#xa;&#x9;&#x9;&#x9;&#x9;&#x9;state&lt;=state;&#xa;&#x9;&#x9;&#x9;end&#xa;&#x9;4'd7:begin&#xa;&#x9;&#x9;&#x9;O_data&lt;=8'h6f;//第8个要发送的数据&#xa;&#x9;&#x9;&#x9;if(I_done_flag)&#xa;&#x9;&#x9;&#x9;&#x9;&#x9;state&lt;=state+1;&#xa;&#x9;&#x9;&#x9;else&#xa;&#x9;&#x9;&#x9;&#x9;&#x9;state&lt;=state;&#xa;&#x9;&#x9;&#x9;end&#xa;&#x9;4'd8:begin&#xa;&#x9;&#x9;&#x9;O_data&lt;=8'h32;//第9个要发送的数据&#xa;&#x9;&#x9;&#x9;if(I_done_flag)&#xa;&#x9;&#x9;&#x9;&#x9;&#x9;state&lt;=state+1;&#xa;&#x9;&#x9;&#x9;else&#xa;&#x9;&#x9;&#x9;&#x9;&#x9;state&lt;=state;&#xa;&#x9;&#x9;&#x9;end&#xa;&#x9;4'd9:begin&#xa;&#x9;&#x9;&#x9;O_data&lt;=8'h7a;//第10个要发送的数据&#xa;&#x9;&#x9;&#x9;if(I_done_flag)&#xa;&#x9;&#x9;&#x9;&#x9;&#x9;state&lt;=state+1;&#xa;&#x9;&#x9;&#x9;else&#xa;&#x9;&#x9;&#x9;&#x9;&#x9;state&lt;=state;&#xa;&#x9;&#x9;&#x9;end&#xa;&#x9;4'd10:begin&#xa;&#x9;&#x9;&#x9;O_data&lt;=8'h68;//第11个要发送的数据&#xa;&#x9;&#x9;&#x9;if(I_done_flag)&#xa;&#x9;&#x9;&#x9;&#x9;&#x9;state&lt;=state+1;&#xa;&#x9;&#x9;&#x9;else&#xa;&#x9;&#x9;&#x9;&#x9;&#x9;state&lt;=state;&#xa;&#x9;&#x9;&#x9;end&#xa;&#x9;4'd11:begin&#xa;&#x9;&#x9;&#x9;O_data&lt;=8'h75;//第12个要发送的数据&#xa;&#x9;&#x9;&#x9;if(I_done_flag)&#xa;&#x9;&#x9;&#x9;&#x9;&#x9;state&lt;=state+1;&#xa;&#x9;&#x9;&#x9;else&#xa;&#x9;&#x9;&#x9;&#x9;&#x9;state&lt;=state;&#xa;&#x9;&#x9;&#x9;end&#xa;&#x9;4'd12:begin&#xa;&#x9;&#x9;&#x9;O_data&lt;=8'h61;//第13个要发送的数据&#xa;&#x9;&#x9;&#x9;if(I_done_flag)&#xa;&#x9;&#x9;&#x9;&#x9;&#x9;state&lt;=state+1;&#xa;&#x9;&#x9;&#x9;else&#xa;&#x9;&#x9;&#x9;&#x9;&#x9;state&lt;=state;&#xa;&#x9;&#x9;&#x9;end&#xa;&#x9;4'd13:begin&#xa;&#x9;&#x9;&#x9;O_data&lt;=8'h6e;//第14个要发送的数据&#xa;&#x9;&#x9;&#x9;if(I_done_flag)&#xa;&#x9;&#x9;&#x9;&#x9;&#x9;state&lt;=state+1;&#xa;&#x9;&#x9;&#x9;else&#xa;&#x9;&#x9;&#x9;&#x9;&#x9;state&lt;=state;&#xa;&#x9;&#x9;&#x9;end&#xa;&#x9;4'd14:begin&#xa;&#x9;&#x9;&#x9;O_data&lt;=8'h32;//第14个要发送的数据&#xa;&#x9;&#x9;&#x9;if(I_done_flag)&#xa;&#x9;&#x9;&#x9;&#x9;&#x9;state&lt;=state+1;&#xa;&#x9;&#x9;&#x9;else&#xa;&#x9;&#x9;&#x9;&#x9;&#x9;state&lt;=state;&#xa;&#x9;&#x9;&#x9;end&#xa;&#x9;4'd15:begin&#xa;&#x9;&#x9;&#x9;if(I_done_flag)//发送结束&#xa;&#x9;&#x9;&#x9;//进行复位&#xa;&#x9;&#x9;&#x9;begin&#xa;&#x9;&#x9;&#x9;&#x9;&#x9;O_iic_send_en&lt;=0;&#xa;&#x9;&#x9;&#x9;&#x9;&#x9;O_Byte_done&lt;=1;&#xa;&#x9;&#x9;&#x9;end&#xa;&#x9;&#x9;&#x9;else&#xa;&#x9;&#x9;&#x9;&#x9;&#x9;state&lt;=state;&#xa;&#x9;end&#x9;&#x9;&#xa;&#x9;default:;&#xa;&#x9;endcase&#xa;&#x9;end&#xa;end&#xa;&#xa;&#xa;&#xa;&#xa;&#xa;" Type="model" Comment="">
  <Port Width="20" X="-0.125" Side="left" Height="20" Function="" Name="I_clk" Connect="" Datasize="1" Datatype="wire" Color="#faebd7" Inout="input" Y="0.1" Parent="play_zuozhuan6"/>
  <Port Width="20" X="-0.125" Side="left" Height="20" Function="" Name="I_en" Connect="" Datasize="1" Datatype="wire" Color="#00ffff" Inout="input" Y="0.2625" Parent="play_zuozhuan6"/>
  <Port Width="20" X="-0.125" Side="left" Height="20" Function="" Name="I_rst_n" Connect="" Datasize="1" Datatype="wire" Color="#7fffd4" Inout="input" Y="0.425" Parent="play_zuozhuan6"/>
  <Port Width="20" X="-0.125" Side="left" Height="20" Function="" Name="I_done_flag" Connect="" Datasize="1" Datatype="wire" Color="#f0ffff" Inout="input" Y="0.5875" Parent="play_zuozhuan6"/>
  <Port Width="20" X="0.875" Side="right" Height="20" Function="" Name="O_data" Connect="" Datasize="8" Datatype="reg" Color="#f5f5dc" Inout="output" Y="0.1375" Parent="play_zuozhuan6"/>
  <Port Width="20" X="0.875" Side="right" Height="20" Function="" Name="O_iic_send_en" Connect="" Datasize="1" Datatype="reg" Color="#ffe4c4" Inout="output" Y="0.3375" Parent="play_zuozhuan6"/>
  <Port Width="20" X="0.875" Side="right" Height="20" Function="" Name="O_Byte_done" Connect="" Datasize="1" Datatype="reg" Color="#b8860b" Inout="output" Y="0.5375" Parent="play_zuozhuan6"/>
 </Module>
 <Module Width="160" X="1078.18" File="Current/play_init.model" Include="" Height="160" Name="play_init2" Parameters="" Class="play_init" Color="#d3d3d3" Y="35" Parent="voice_play_cptBlock" Code="reg [3:0]state;&#xa;always@(posedge I_clk,negedge I_rst_n)//状态机负责切换发送的数据&#xa;begin&#xa;if(!I_rst_n)&#xa;&#x9;begin&#xa;&#x9;&#x9;state&lt;=4'd0;&#xa;&#x9;&#x9;O_iic_send_en&lt;=1;&#xa;&#x9;&#x9;O_Byte_done&lt;=0;&#xa;&#x9;end&#xa;else&#xa;if(I_en)&#xa;&#x9;begin&#xa;&#x9;case(state)&#xa;&#x9;4'd0:begin&#xa;&#x9;&#x9;&#x9;O_data&lt;=8'hfd;//第一个要发送的数据&#xa;&#x9;&#x9;&#x9;if(I_done_flag)&#xa;&#x9;&#x9;&#x9;&#x9;&#x9;state&lt;=state+1;&#xa;&#x9;&#x9;&#x9;else&#xa;&#x9;&#x9;&#x9;&#x9;&#x9;state&lt;=state;&#xa;&#x9;&#x9;&#x9;end&#xa;&#x9;4'd1:begin&#xa;&#x9;&#x9;&#x9;O_data&lt;=8'h0;//第2个要发送的数据&#xa;&#x9;&#x9;&#x9;if(I_done_flag)&#xa;&#x9;&#x9;&#x9;&#x9;&#x9;state&lt;=state+1;&#xa;&#x9;&#x9;&#x9;else&#xa;&#x9;&#x9;&#x9;&#x9;&#x9;state&lt;=state;&#xa;&#x9;&#x9;&#x9;end&#xa;&#x9;4'd2:begin&#xa;&#x9;&#x9;&#x9;O_data&lt;=8'h06;//第3个要发送的数据&#xa;&#x9;&#x9;&#x9;if(I_done_flag)&#xa;&#x9;&#x9;&#x9;&#x9;&#x9;state&lt;=state+1;&#xa;&#x9;&#x9;&#x9;else&#xa;&#x9;&#x9;&#x9;&#x9;&#x9;state&lt;=state;&#xa;&#x9;&#x9;&#x9;end&#xa;&#x9;4'd3:begin&#xa;&#x9;&#x9;&#x9;O_data&lt;=8'h01;//第4个要发送的数据&#xa;&#x9;&#x9;&#x9;if(I_done_flag)&#xa;&#x9;&#x9;&#x9;&#x9;&#x9;state&lt;=state+1;&#xa;&#x9;&#x9;&#x9;else&#xa;&#x9;&#x9;&#x9;&#x9;&#x9;state&lt;=state;&#xa;&#x9;&#x9;&#x9;end&#xa;&#x9;4'd4:begin&#xa;&#x9;&#x9;&#x9;O_data&lt;=8'h0;//第5个要发送的数据&#xa;&#x9;&#x9;&#x9;if(I_done_flag)&#xa;&#x9;&#x9;&#x9;&#x9;&#x9;state&lt;=state+1;&#xa;&#x9;&#x9;&#x9;else&#xa;&#x9;&#x9;&#x9;&#x9;&#x9;state&lt;=state;&#xa;&#x9;&#x9;&#x9;end&#xa;&#x9;4'd5:begin&#xa;&#x9;&#x9;&#x9;O_data&lt;=8'h5b;//第6个要发送的数据&#xa;&#x9;&#x9;&#x9;if(I_done_flag)&#xa;&#x9;&#x9;&#x9;&#x9;&#x9;state&lt;=state+1;&#xa;&#x9;&#x9;&#x9;else&#xa;&#x9;&#x9;&#x9;&#x9;&#x9;state&lt;=state;&#xa;&#x9;&#x9;&#x9;end&#xa;&#x9;4'd6:begin&#xa;&#x9;&#x9;&#x9;O_data&lt;=8'h69;//第7个要发送的数据&#xa;&#x9;&#x9;&#x9;if(I_done_flag)&#xa;&#x9;&#x9;&#x9;&#x9;&#x9;state&lt;=state+1;&#xa;&#x9;&#x9;&#x9;else&#xa;&#x9;&#x9;&#x9;&#x9;&#x9;state&lt;=state;&#xa;&#x9;&#x9;&#x9;end&#xa;&#x9;4'd7:begin&#xa;&#x9;&#x9;&#x9;O_data&lt;=8'h31;//第8个要发送的数据&#xa;&#x9;&#x9;&#x9;if(I_done_flag)&#xa;&#x9;&#x9;&#x9;&#x9;&#x9;state&lt;=state+1;&#xa;&#x9;&#x9;&#x9;else&#xa;&#x9;&#x9;&#x9;&#x9;&#x9;state&lt;=state;&#xa;&#x9;&#x9;&#x9;end&#xa;&#x9;4'd8:begin&#xa;&#x9;&#x9;&#x9;O_data&lt;=8'h5d;//第9个要发送的数据&#xa;&#x9;&#x9;&#x9;if(I_done_flag)&#xa;&#x9;&#x9;&#x9;&#x9;&#x9;state&lt;=state+1;&#xa;&#x9;&#x9;&#x9;else&#xa;&#x9;&#x9;&#x9;&#x9;&#x9;state&lt;=state;&#xa;&#x9;&#x9;&#x9;end&#xa;&#x9;&#xa;&#x9;4'd9:begin&#xa;&#x9;&#x9;&#x9;if(I_done_flag)//发送结束&#xa;&#x9;&#x9;&#x9;//进行复位&#xa;&#x9;&#x9;&#x9;begin&#xa;&#x9;&#x9;&#x9;&#x9;&#x9;O_iic_send_en&lt;=0;&#xa;&#x9;&#x9;&#x9;&#x9;&#x9;O_Byte_done&lt;=1;&#xa;&#x9;&#x9;&#x9;end&#xa;&#x9;&#x9;&#x9;else&#xa;&#x9;&#x9;&#x9;&#x9;&#x9;state&lt;=state;&#xa;&#x9;end&#x9;&#x9;&#xa;&#x9;default:;&#xa;&#x9;endcase&#xa;&#x9;end&#xa;end&#xa;&#xa;&#xa;&#xa;&#xa;&#xa;&#xa;&#xa;&#xa;" Type="model" Comment="">
  <Port Width="20" X="-0.125" Side="left" Height="20" Function="" Name="I_clk" Connect="" Datasize="1" Datatype="wire" Color="#faebd7" Inout="input" Y="0.1" Parent="play_init2"/>
  <Port Width="20" X="-0.125" Side="left" Height="20" Function="" Name="I_en" Connect="" Datasize="1" Datatype="wire" Color="#00ffff" Inout="input" Y="0.2625" Parent="play_init2"/>
  <Port Width="20" X="-0.125" Side="left" Height="20" Function="" Name="I_rst_n" Connect="" Datasize="1" Datatype="wire" Color="#7fffd4" Inout="input" Y="0.425" Parent="play_init2"/>
  <Port Width="20" X="-0.125" Side="left" Height="20" Function="" Name="I_done_flag" Connect="" Datasize="1" Datatype="wire" Color="#f0ffff" Inout="input" Y="0.5875" Parent="play_init2"/>
  <Port Width="20" X="0.875" Side="right" Height="20" Function="" Name="O_data" Connect="" Datasize="8" Datatype="reg" Color="#f5f5dc" Inout="output" Y="0.1375" Parent="play_init2"/>
  <Port Width="20" X="0.875" Side="right" Height="20" Function="" Name="O_iic_send_en" Connect="" Datasize="1" Datatype="reg" Color="#ffe4c4" Inout="output" Y="0.3375" Parent="play_init2"/>
  <Port Width="20" X="0.875" Side="right" Height="20" Function="" Name="O_Byte_done" Connect="" Datasize="1" Datatype="reg" Color="#b8860b" Inout="output" Y="0.5375" Parent="play_init2"/>
 </Module>
 <Module Width="310" X="105.544" File="Current/voice_play_control.model" Include="" Height="276" Name="voice_play_control7" Parameters="" Class="voice_play_control" Color="#d3d3d3" Y="339.817" Parent="voice_play_cptBlock" Code="reg [2:0] state;//状态机进行控制&#xa;reg [2:0] jump_state;//状态跳转&#xa;reg [1:0] select_tmp;//状态暂存&#xa;reg f;&#xa;//函数&#xa;function Reset;&#xa;&#x9;input&#x9;[1:0]select;&#xa;&#x9;case(select)&#xa;&#x9;2'd0:begin&#x9;run_en=0;&#xa;&#x9;&#x9;run_rst_n=0;end&#xa;&#x9;2'd1:begin&#x9;stop_en=0;&#xa;&#x9;&#x9;stop_rst_n=0; end&#xa;&#x9;2'd2:begin&#x9;left_en=0;&#xa;&#x9;&#x9;left_rst_n=0; end&#xa;&#x9;2'd3:begin&#x9;right_en=0;&#xa;&#x9;&#x9;right_rst_n=0; end&#xa;&#x9;default:;&#xa;&#x9;endcase&#xa;endfunction&#xa;//函数&#xa;function Enable;&#xa;&#x9;input&#x9;[1:0]select;&#xa;&#x9;case(select)&#xa;&#x9;2'd0:begin&#x9;run_en=1;&#xa;&#x9;&#x9;run_rst_n=1;end&#xa;&#x9;2'd1:begin&#x9;stop_en=1;&#xa;&#x9;&#x9;stop_rst_n=1; end&#xa;&#x9;2'd2:begin&#x9;left_en=1;&#xa;&#x9;&#x9;left_rst_n=1; end&#xa;&#x9;2'd3:begin&#x9;right_en=1;&#xa;&#x9;&#x9;right_rst_n=1; end&#xa;&#x9;default:;&#xa;&#x9;endcase&#xa;endfunction&#xa;&#xa;function Finished;&#xa;&#x9;input&#x9;[1:0]select;&#xa;&#x9;case(select)&#xa;&#x9;2'd0:begin&#x9;if(run_done)&#xa;&#x9;&#x9;state=3'd3;&#xa;&#x9;&#x9;else&#xa;&#x9;&#x9;state=state;end&#xa;&#x9;2'd1:begin&#x9;if(stop_done)&#xa;&#x9;&#x9;state=3'd3;&#xa;&#x9;&#x9;else&#xa;&#x9;&#x9;state=state; end&#xa;&#x9;2'd2:begin&#x9;if(left_done)&#xa;&#x9;&#x9;state=3'd3;&#xa;&#x9;&#x9;else&#xa;&#x9;&#x9;state=state;end&#xa;&#x9;2'd3:begin&#x9;if(right_done)&#xa;&#x9;&#x9;state=3'd3;&#xa;&#x9;&#x9;else&#xa;&#x9;&#x9;state=state; end&#xa;&#x9;default:;&#xa;&#x9;endcase&#xa;endfunction&#xa;&#xa;always@(negedge I_rst_n,posedge I_clk)&#xa;begin&#xa;&#x9;if(!I_rst_n)//复位&#xa;&#x9;begin&#xa;&#x9;&#x9;//输出赋初值&#xa;&#x9;&#x9;init_en&lt;=0;//进行语音配置初始化&#xa;&#x9;&#x9;init_rst_n&lt;=1;&#xa;&#x9;&#x9;run_en&lt;=0;&#xa;&#x9;&#x9;run_rst_n&lt;=1;&#xa;&#x9;&#x9;stop_en&lt;=0;&#xa;&#x9;&#x9;stop_rst_n&lt;=1;&#xa;&#x9;&#x9;left_en&lt;=0;&#xa;&#x9;&#x9;left_rst_n&lt;=1;&#xa;&#x9;&#x9;right_en&lt;=0;&#xa;&#x9;&#x9;right_rst_n&lt;=1;&#xa;&#x9;&#x9;state&lt;=3'd0;&#xa;&#x9;end&#xa;&#x9;else&#xa;if(I_en)&#xa;begin&#xa;&#x9;case(state)&#xa;&#x9;3'd0:begin&#xa;&#x9;&#x9;init_en&lt;=0;&#xa;&#x9;&#x9;init_rst_n&lt;=0;//初始化复位&#xa;&#x9;&#x9;state&lt;=state+3'd1;&#xa;&#x9;&#x9;&#x9;end&#xa;&#x9;3'd1:begin&#xa;&#x9;&#x9;init_en&lt;=1;//开始运行&#xa;&#x9;&#x9;init_rst_n&lt;=1;&#xa;//初始化完成后进入下一个阶段&#xa;&#x9;&#x9;if(init_done)&#xa;&#x9;&#x9;state&lt;=state+3'd1;&#xa;&#x9;&#x9;else&#xa;&#x9;&#x9;state&lt;=state;&#xa;&#x9;&#x9;&#x9;end&#xa;&#x9;3'd2:begin//结束初始化&#xa;&#x9;&#x9;init_en&lt;=0;&#xa;&#x9;&#x9;init_rst_n&lt;=1;&#xa;&#x9;&#x9;state&lt;=state+3'd1;&#xa;&#x9;&#x9;&#x9;end&#xa;&#x9;3'd3:begin//读取状态&#xa;&#x9;&#x9;select_tmp&lt;=select;&#xa;&#x9;&#x9;state&lt;=state+3'd1;&#xa;&#x9;&#x9;&#x9;end&#xa;&#x9;3'd4:begin//复位&#xa;&#x9;&#x9;f=Reset(select_tmp);&#xa;&#x9;&#x9;state&lt;=state+3'd1;&#xa;&#x9;&#x9;&#x9;end&#xa;&#x9;3'd5:begin//使能&#xa;&#x9;&#x9;f=Enable(select_tmp);&#xa;&#x9;&#x9;f=Finished(select_tmp);&#xa;&#x9;&#x9;&#x9;end&#xa;&#x9;endcase&#xa;end&#xa;&#xa;end&#xa;&#xa;&#xa;" Type="model" Comment="">
  <Port Width="20" X="-0.0645161" Side="left" Height="20" Function="" Name="I_clk" Connect="" Datasize="1" Datatype="wire" Color="#faebd7" Inout="input" Y="0.130435" Parent="voice_play_control7"/>
  <Port Width="20" X="-0.0645161" Side="left" Height="20" Function="" Name="I_rst_n" Connect="" Datasize="1" Datatype="wire" Color="#00ffff" Inout="input" Y="0.289855" Parent="voice_play_control7"/>
  <Port Width="20" X="-0.0645161" Side="left" Height="20" Function="" Name="I_en" Connect="" Datasize="1" Datatype="wire" Color="#7fffd4" Inout="input" Y="0.460145" Parent="voice_play_control7"/>
  <Port Width="20" X="-0.0645161" Side="left" Height="20" Function="" Name="select" Connect="" Datasize="2" Datatype="wire" Color="#f0ffff" Inout="input" Y="0.630435" Parent="voice_play_control7"/>
  <Port Width="20" X="0.935484" Side="right" Height="20" Function="" Name="init_en" Connect="" Datasize="1" Datatype="reg" Color="#f5f5dc" Inout="output" Y="0.0144928" Parent="voice_play_control7"/>
  <Port Width="20" X="0.935484" Side="right" Height="20" Function="" Name="init_rst_n" Connect="" Datasize="1" Datatype="reg" Color="#ffe4c4" Inout="output" Y="0.076087" Parent="voice_play_control7"/>
  <Port Width="20" X="0.935484" Side="right" Height="20" Function="" Name="run_en" Connect="" Datasize="1" Datatype="reg" Color="#b8860b" Inout="output" Y="0.134058" Parent="voice_play_control7"/>
  <Port Width="20" X="0.935484" Side="right" Height="20" Function="" Name="run_rst_n" Connect="" Datasize="1" Datatype="reg" Color="#ffebcd" Inout="output" Y="0.192029" Parent="voice_play_control7"/>
  <Port Width="20" X="0.935484" Side="right" Height="20" Function="" Name="stop_en" Connect="" Datasize="1" Datatype="reg" Color="#0000ff" Inout="output" Y="0.25" Parent="voice_play_control7"/>
  <Port Width="20" X="0.935484" Side="right" Height="20" Function="" Name="stop_rst_n" Connect="" Datasize="1" Datatype="reg" Color="#8a2be2" Inout="output" Y="0.304348" Parent="voice_play_control7"/>
  <Port Width="20" X="0.935484" Side="right" Height="20" Function="" Name="left_en" Connect="" Datasize="1" Datatype="reg" Color="#a52a2a" Inout="output" Y="0.362319" Parent="voice_play_control7"/>
  <Port Width="20" X="0.935484" Side="right" Height="20" Function="" Name="left_rst_n" Connect="" Datasize="1" Datatype="reg" Color="#deb887" Inout="output" Y="0.42029" Parent="voice_play_control7"/>
  <Port Width="20" X="0.935484" Side="right" Height="20" Function="" Name="right_en" Connect="" Datasize="1" Datatype="reg" Color="#5f9ea0" Inout="output" Y="0.478261" Parent="voice_play_control7"/>
  <Port Width="20" X="0.935484" Side="right" Height="20" Function="" Name="right_rst_n" Connect="" Datasize="1" Datatype="reg" Color="#7fff00" Inout="output" Y="0.536232" Parent="voice_play_control7"/>
  <Port Width="20" X="0.935484" Side="right" Height="20" Function="" Name="init_done" Connect="" Datasize="1" Datatype="wire" Color="#d2691e" Inout="input" Y="0.594203" Parent="voice_play_control7"/>
  <Port Width="20" X="0.935484" Side="right" Height="20" Function="" Name="run_done" Connect="" Datasize="1" Datatype="wire" Color="#ff7f50" Inout="input" Y="0.652174" Parent="voice_play_control7"/>
  <Port Width="20" X="0.935484" Side="right" Height="20" Function="" Name="stop_done" Connect="" Datasize="1" Datatype="wire" Color="#6495ed" Inout="input" Y="0.710145" Parent="voice_play_control7"/>
  <Port Width="20" X="0.935484" Side="right" Height="20" Function="" Name="left_done" Connect="" Datasize="1" Datatype="wire" Color="#fff8dc" Inout="input" Y="0.768116" Parent="voice_play_control7"/>
  <Port Width="20" X="0.935484" Side="right" Height="20" Function="" Name="right_done" Connect="" Datasize="1" Datatype="wire" Color="#dc143c" Inout="input" Y="0.826087" Parent="voice_play_control7"/>
 </Module>
 <Module Width="122" X="1026.29" File="Current/MUX.model" Include="" Height="489" Name="MUX8" Parameters="" Class="MUX" Color="#d3d3d3" Y="285.794" Parent="voice_play_cptBlock" Code="always@(*)&#xa;begin&#xa;&#x9;case({select1,select2,select3,select4,select5})&#xa;&#x9;5'b10000:begin&#x9;O_data=init_data;O_en=init_en;end&#xa;&#x9;5'b01000:begin&#x9;O_data=run_data;O_en=run_en;end&#xa;&#x9;5'b00100:begin&#x9;O_data=stop_data;O_en=stop_en;end&#xa;&#x9;5'b00010:begin&#x9;O_data=left_data;O_en=left_en;end&#xa;&#x9;5'b00001:begin&#x9;O_data=right_data;O_en=right_en;end&#xa;&#x9;default:;&#xa;&#x9;endcase&#xa;end&#xa;&#xa;&#xa;" Type="model" Comment="">
  <Port Width="20" X="-0.163934" Side="left" Height="20" Function="" Name="select2" Connect="" Datasize="1" Datatype="wire" Color="#faebd7" Inout="input" Y="0.0899796" Parent="MUX8"/>
  <Port Width="20" X="-0.163934" Side="left" Height="20" Function="" Name="init_data" Connect="" Datasize="8" Datatype="wire" Color="#00ffff" Inout="input" Y="0.319018" Parent="MUX8"/>
  <Port Width="20" X="-0.163934" Side="left" Height="20" Function="" Name="init_en" Connect="" Datasize="1" Datatype="wire" Color="#7fffd4" Inout="input" Y="0.376278" Parent="MUX8"/>
  <Port Width="20" X="-0.163934" Side="left" Height="20" Function="" Name="run_data" Connect="" Datasize="8" Datatype="wire" Color="#f0ffff" Inout="input" Y="0.437628" Parent="MUX8"/>
  <Port Width="20" X="-0.163934" Side="left" Height="20" Function="" Name="run_en" Connect="" Datasize="1" Datatype="wire" Color="#f5f5dc" Inout="input" Y="0.494888" Parent="MUX8"/>
  <Port Width="20" X="-0.163934" Side="left" Height="20" Function="" Name="stop_data" Connect="" Datasize="8" Datatype="wire" Color="#ffe4c4" Inout="input" Y="0.548057" Parent="MUX8"/>
  <Port Width="20" X="-0.163934" Side="left" Height="20" Function="" Name="stop_en" Connect="" Datasize="1" Datatype="wire" Color="#b8860b" Inout="input" Y="0.609407" Parent="MUX8"/>
  <Port Width="20" X="-0.163934" Side="left" Height="20" Function="" Name="left_data" Connect="" Datasize="8" Datatype="wire" Color="#ffebcd" Inout="input" Y="0.666667" Parent="MUX8"/>
  <Port Width="20" X="-0.163934" Side="left" Height="20" Function="" Name="left_en" Connect="" Datasize="1" Datatype="wire" Color="#0000ff" Inout="input" Y="0.719836" Parent="MUX8"/>
  <Port Width="20" X="-0.163934" Side="left" Height="20" Function="" Name="right_data" Connect="" Datasize="8" Datatype="wire" Color="#8a2be2" Inout="input" Y="0.777096" Parent="MUX8"/>
  <Port Width="20" X="-0.163934" Side="left" Height="20" Function="" Name="right_en" Connect="" Datasize="1" Datatype="wire" Color="#a52a2a" Inout="input" Y="0.838446" Parent="MUX8"/>
  <Port Width="20" X="0.836066" Side="right" Height="20" Function="" Name="O_data" Connect="" Datasize="8" Datatype="reg" Color="#deb887" Inout="output" Y="0.229039" Parent="MUX8"/>
  <Port Width="20" X="0.836066" Side="right" Height="20" Function="" Name="O_en" Connect="" Datasize="1" Datatype="reg" Color="#5f9ea0" Inout="output" Y="0.478528" Parent="MUX8"/>
  <Port Width="20" X="-0.163934" Side="left" Height="20" Function="" Name="select3" Connect="" Datasize="1" Datatype="wire" Color="#7fff00" Inout="input" Y="0.147239" Parent="MUX8"/>
  <Port Width="20" X="-0.163934" Side="left" Height="20" Function="" Name="select4" Connect="" Datasize="1" Datatype="wire" Color="#d2691e" Inout="input" Y="0.208589" Parent="MUX8"/>
  <Port Width="20" X="-0.163934" Side="left" Height="20" Function="" Name="select1" Connect="" Datasize="1" Datatype="wire" Color="#ff7f50" Inout="input" Y="0.0327198" Parent="MUX8"/>
  <Port Width="20" X="-0.163934" Side="left" Height="20" Function="" Name="select5" Connect="" Datasize="1" Datatype="wire" Color="#6495ed" Inout="input" Y="0.265849" Parent="MUX8"/>
 </Module>
 <Port Width="20" X="-0.013624" Side="left" Height="20" Function="" Name="I_clk" Datasize="1" Datatype="wire" Color="#faebd7" Inout="input" Y="0.154725" Parent="voice_play_cptBlock"/>
 <Port Width="20" X="-0.013624" Side="left" Height="20" Function="" Name="I_rst_n" Datasize="1" Datatype="wire" Color="#00ffff" Inout="input" Y="0.321911" Parent="voice_play_cptBlock"/>
 <Port Width="20" X="-0.013624" Side="left" Height="20" Function="" Name="I_en" Datasize="1" Datatype="wire" Color="#7fffd4" Inout="input" Y="0.48702" Parent="voice_play_cptBlock"/>
 <Port Width="20" X="-0.013624" Side="left" Height="20" Function="" Name="select" Datasize="2" Datatype="wire" Color="#f0ffff" Inout="input" Y="0.654206" Parent="voice_play_cptBlock"/>
 <Port Width="20" X="0.986376" Side="right" Height="20" Function="" Name="O_scl" Datasize="1" Datatype="wire" Color="#f5f5dc" Inout="output" Y="0.188993" Parent="voice_play_cptBlock"/>
 <Port Width="20" X="0.98297" Side="right" Height="20" Function="" Name="O_sda_mode" Datasize="1" Datatype="wire" Color="#b8860b" Inout="output" Y="0.958463" Parent="voice_play_cptBlock"/>
 <Port Width="20" X="0.986376" Side="right" Height="20" Function="" Name="IO_sda" Datasize="1" Datatype="wire" Color="#ffebcd" Inout="inout" Y="0.38837" Parent="voice_play_cptBlock"/>
 <Wire From="voice_play_cptBlock#iic_send1>O_scl" Name="iic_send1_O_scl" Datasize="1" Datatype="wire" Parent="voice_play_cptBlock" To="voice_play_cptBlock>O_scl"/>
 <Wire From="voice_play_cptBlock#iic_send1>IO_sda" Name="iic_send1_IO_sda" Datasize="1" Datatype="wire" Parent="voice_play_cptBlock" To="voice_play_cptBlock>IO_sda"/>
 <Wire From="voice_play_cptBlock>I_clk" Name="voice_play_cptBlock_I_clk" Datasize="1" Datatype="wire" Parent="voice_play_cptBlock" To="voice_play_cptBlock#voice_play_control7>I_clk"/>
 <Wire From="voice_play_cptBlock>I_rst_n" Name="voice_play_cptBlock_I_rst_n" Datasize="1" Datatype="wire" Parent="voice_play_cptBlock" To="voice_play_cptBlock#voice_play_control7>I_rst_n"/>
 <Wire From="voice_play_cptBlock>I_en" Name="voice_play_cptBlock_I_en" Datasize="1" Datatype="wire" Parent="voice_play_cptBlock" To="voice_play_cptBlock#voice_play_control7>I_en"/>
 <Wire From="voice_play_cptBlock>select" Name="voice_play_cptBlock_select" Datasize="2" Datatype="wire" Parent="voice_play_cptBlock" To="voice_play_cptBlock#voice_play_control7>select"/>
 <Wire From="voice_play_cptBlock#voice_play_control7>init_done" Name="play_init2_O_Byte_done" Datasize="1" Datatype="wire" Parent="voice_play_cptBlock" To="voice_play_cptBlock#play_init2>O_Byte_done"/>
 <Wire From="voice_play_cptBlock#voice_play_control7>run_done" Name="play_qianjin3_O_Byte_done" Datasize="1" Datatype="wire" Parent="voice_play_cptBlock" To="voice_play_cptBlock#play_qianjin3>O_Byte_done"/>
 <Wire From="voice_play_cptBlock#voice_play_control7>stop_done" Name="play_tingzhi4_O_Byte_done" Datasize="1" Datatype="wire" Parent="voice_play_cptBlock" To="voice_play_cptBlock#play_tingzhi4>O_Byte_done"/>
 <Wire From="voice_play_cptBlock#voice_play_control7>left_done" Name="play_zuozhuan6_O_Byte_done" Datasize="1" Datatype="wire" Parent="voice_play_cptBlock" To="voice_play_cptBlock#play_zuozhuan6>O_Byte_done"/>
 <Wire From="voice_play_cptBlock#voice_play_control7>right_done" Name="play_youzhuan5_O_Byte_done" Datasize="1" Datatype="wire" Parent="voice_play_cptBlock" To="voice_play_cptBlock#play_youzhuan5>O_Byte_done"/>
 <Wire From="voice_play_cptBlock>I_clk" Name="voice_play_cptBlock_I_clk" Datasize="1" Datatype="wire" Parent="voice_play_cptBlock" To="voice_play_cptBlock#play_init2>I_clk"/>
 <Wire From="voice_play_cptBlock#iic_send1>O_done_flag" Name="iic_send1_O_done_flag" Datasize="1" Datatype="wire" Parent="voice_play_cptBlock" To="voice_play_cptBlock#play_init2>I_done_flag"/>
 <Wire From="voice_play_cptBlock#iic_send1>O_done_flag" Name="iic_send1_O_done_flag" Datasize="1" Datatype="wire" Parent="voice_play_cptBlock" To="voice_play_cptBlock#play_qianjin3>I_done_flag"/>
 <Wire From="voice_play_cptBlock#iic_send1>O_done_flag" Name="iic_send1_O_done_flag" Datasize="1" Datatype="wire" Parent="voice_play_cptBlock" To="voice_play_cptBlock#play_tingzhi4>I_done_flag"/>
 <Wire From="voice_play_cptBlock#iic_send1>O_done_flag" Name="iic_send1_O_done_flag" Datasize="1" Datatype="wire" Parent="voice_play_cptBlock" To="voice_play_cptBlock#play_zuozhuan6>I_done_flag"/>
 <Wire From="voice_play_cptBlock#iic_send1>O_done_flag" Name="iic_send1_O_done_flag" Datasize="1" Datatype="wire" Parent="voice_play_cptBlock" To="voice_play_cptBlock#play_youzhuan5>I_done_flag"/>
 <Wire From="voice_play_cptBlock#iic_send1>O_sda_mode" Name="iic_send1_O_sda_mode" Datasize="1" Datatype="wire" Parent="voice_play_cptBlock" To="voice_play_cptBlock>O_sda_mode"/>
 <Wire From="voice_play_cptBlock>I_clk" Name="voice_play_cptBlock_I_clk" Datasize="1" Datatype="wire" Parent="voice_play_cptBlock" To="voice_play_cptBlock#iic_send1>I_clk"/>
 <Wire From="voice_play_cptBlock>I_rst_n" Name="voice_play_cptBlock_I_rst_n" Datasize="1" Datatype="wire" Parent="voice_play_cptBlock" To="voice_play_cptBlock#iic_send1>I_rst_n"/>
 <Wire From="voice_play_cptBlock#voice_play_control7>init_en" Name="voice_play_control7_init_en" Datasize="1" Datatype="wire" Parent="voice_play_cptBlock" To="voice_play_cptBlock#play_init2>I_en"/>
 <Wire From="voice_play_cptBlock#voice_play_control7>init_rst_n" Name="voice_play_control7_init_rst_n" Datasize="1" Datatype="wire" Parent="voice_play_cptBlock" To="voice_play_cptBlock#play_init2>I_rst_n"/>
 <Wire From="voice_play_cptBlock#voice_play_control7>run_en" Name="voice_play_control7_run_en" Datasize="1" Datatype="wire" Parent="voice_play_cptBlock" To="voice_play_cptBlock#play_qianjin3>I_en"/>
 <Wire From="voice_play_cptBlock#voice_play_control7>run_rst_n" Name="voice_play_control7_run_rst_n" Datasize="1" Datatype="wire" Parent="voice_play_cptBlock" To="voice_play_cptBlock#play_qianjin3>I_rst_n"/>
 <Wire From="voice_play_cptBlock#voice_play_control7>stop_en" Name="voice_play_control7_stop_en" Datasize="1" Datatype="wire" Parent="voice_play_cptBlock" To="voice_play_cptBlock#play_tingzhi4>I_en"/>
 <Wire From="voice_play_cptBlock#voice_play_control7>stop_rst_n" Name="voice_play_control7_stop_rst_n" Datasize="1" Datatype="wire" Parent="voice_play_cptBlock" To="voice_play_cptBlock#play_tingzhi4>I_rst_n"/>
 <Wire From="voice_play_cptBlock#voice_play_control7>left_en" Name="voice_play_control7_left_en" Datasize="1" Datatype="wire" Parent="voice_play_cptBlock" To="voice_play_cptBlock#play_zuozhuan6>I_en"/>
 <Wire From="voice_play_cptBlock#voice_play_control7>left_rst_n" Name="voice_play_control7_left_rst_n" Datasize="1" Datatype="wire" Parent="voice_play_cptBlock" To="voice_play_cptBlock#play_zuozhuan6>I_rst_n"/>
 <Wire From="voice_play_cptBlock#voice_play_control7>right_en" Name="voice_play_control7_right_en" Datasize="1" Datatype="wire" Parent="voice_play_cptBlock" To="voice_play_cptBlock#play_youzhuan5>I_en"/>
 <Wire From="voice_play_cptBlock#voice_play_control7>right_rst_n" Name="voice_play_control7_right_rst_n" Datasize="1" Datatype="wire" Parent="voice_play_cptBlock" To="voice_play_cptBlock#play_youzhuan5>I_rst_n"/>
 <Wire From="voice_play_cptBlock>I_clk" Name="voice_play_cptBlock_I_clk" Datasize="1" Datatype="wire" Parent="voice_play_cptBlock" To="voice_play_cptBlock#play_zuozhuan6>I_clk"/>
 <Wire From="voice_play_cptBlock>I_clk" Name="voice_play_cptBlock_I_clk" Datasize="1" Datatype="wire" Parent="voice_play_cptBlock" To="voice_play_cptBlock#play_youzhuan5>I_clk"/>
 <Wire From="voice_play_cptBlock#voice_play_control7>init_en" Name="voice_play_control7_init_en" Datasize="1" Datatype="wire" Parent="voice_play_cptBlock" To="voice_play_cptBlock#MUX8>select1"/>
 <Wire From="voice_play_cptBlock#MUX8>O_data" Name="MUX8_O_data" Datasize="8" Datatype="wire" Parent="voice_play_cptBlock" To="voice_play_cptBlock#iic_send1>I_write_data"/>
 <Wire From="voice_play_cptBlock#MUX8>O_en" Name="MUX8_O_en" Datasize="1" Datatype="wire" Parent="voice_play_cptBlock" To="voice_play_cptBlock#iic_send1>I_iic_send_en"/>
 <Wire From="voice_play_cptBlock#voice_play_control7>run_en" Name="voice_play_control7_run_en" Datasize="1" Datatype="wire" Parent="voice_play_cptBlock" To="voice_play_cptBlock#MUX8>select2"/>
 <Wire From="voice_play_cptBlock#voice_play_control7>stop_en" Name="voice_play_control7_stop_en" Datasize="1" Datatype="wire" Parent="voice_play_cptBlock" To="voice_play_cptBlock#MUX8>select3"/>
 <Wire From="voice_play_cptBlock#voice_play_control7>left_en" Name="voice_play_control7_left_en" Datasize="1" Datatype="wire" Parent="voice_play_cptBlock" To="voice_play_cptBlock#MUX8>select4"/>
 <Wire From="voice_play_cptBlock#voice_play_control7>right_en" Name="voice_play_control7_right_en" Datasize="1" Datatype="wire" Parent="voice_play_cptBlock" To="voice_play_cptBlock#MUX8>select5"/>
 <Wire From="voice_play_cptBlock#play_init2>O_data" Name="play_init2_O_data" Datasize="8" Datatype="wire" Parent="voice_play_cptBlock" To="voice_play_cptBlock#MUX8>init_data"/>
 <Wire From="voice_play_cptBlock#play_init2>O_iic_send_en" Name="play_init2_O_iic_send_en" Datasize="1" Datatype="wire" Parent="voice_play_cptBlock" To="voice_play_cptBlock#MUX8>init_en"/>
 <Wire From="voice_play_cptBlock#play_qianjin3>O_data" Name="play_qianjin3_O_data" Datasize="8" Datatype="wire" Parent="voice_play_cptBlock" To="voice_play_cptBlock#MUX8>run_data"/>
 <Wire From="voice_play_cptBlock#play_qianjin3>O_iic_send_en" Name="play_qianjin3_O_iic_send_en" Datasize="1" Datatype="wire" Parent="voice_play_cptBlock" To="voice_play_cptBlock#MUX8>run_en"/>
 <Wire From="voice_play_cptBlock#play_tingzhi4>O_data" Name="play_tingzhi4_O_data" Datasize="8" Datatype="wire" Parent="voice_play_cptBlock" To="voice_play_cptBlock#MUX8>stop_data"/>
 <Wire From="voice_play_cptBlock#play_tingzhi4>O_iic_send_en" Name="play_tingzhi4_O_iic_send_en" Datasize="1" Datatype="wire" Parent="voice_play_cptBlock" To="voice_play_cptBlock#MUX8>stop_en"/>
 <Wire From="voice_play_cptBlock#play_zuozhuan6>O_data" Name="play_zuozhuan6_O_data" Datasize="8" Datatype="wire" Parent="voice_play_cptBlock" To="voice_play_cptBlock#MUX8>left_data"/>
 <Wire From="voice_play_cptBlock#play_zuozhuan6>O_iic_send_en" Name="play_zuozhuan6_O_iic_send_en" Datasize="1" Datatype="wire" Parent="voice_play_cptBlock" To="voice_play_cptBlock#MUX8>left_en"/>
 <Wire From="voice_play_cptBlock#play_youzhuan5>O_data" Name="play_youzhuan5_O_data" Datasize="8" Datatype="wire" Parent="voice_play_cptBlock" To="voice_play_cptBlock#MUX8>right_data"/>
 <Wire From="voice_play_cptBlock#play_youzhuan5>O_iic_send_en" Name="play_youzhuan5_O_iic_send_en" Datasize="1" Datatype="wire" Parent="voice_play_cptBlock" To="voice_play_cptBlock#MUX8>right_en"/>
 <Wire From="voice_play_cptBlock>I_clk" Name="voice_play_cptBlock_I_clk" Datasize="1" Datatype="wire" Parent="voice_play_cptBlock" To="voice_play_cptBlock#play_qianjin3>I_clk"/>
 <Wire From="voice_play_cptBlock>I_clk" Name="voice_play_cptBlock_I_clk" Datasize="1" Datatype="wire" Parent="voice_play_cptBlock" To="voice_play_cptBlock#play_tingzhi4>I_clk"/>
</Module>
