module duty_decoder(
	state,
	A1duty,
	B1duty,
	A2duty,
	B2duty,
	A3duty,
	B3duty,
	A4duty,
	B4duty,
	en);

	//---Ports declearation: generated by Robei---
	input [1:0] state;
	output [7:0] A1duty;
	output [7:0] B1duty;
	output [7:0] A2duty;
	output [7:0] B2duty;
	output [7:0] A3duty;
	output [7:0] B3duty;
	output [7:0] A4duty;
	output [7:0] B4duty;
	input en;

	wire [1:0] state;
	reg [7:0] A1duty;
	reg [7:0] B1duty;
	reg [7:0] A2duty;
	reg [7:0] B2duty;
	reg [7:0] A3duty;
	reg [7:0] B3duty;
	reg [7:0] A4duty;
	reg [7:0] B4duty;
	wire en;

	//----Code starts here: integrated by Robei-----
	always@(*)
	begin
	if(en==1)//使能
	begin
	case(state)
				2'b00 :begin//前进
						   A1duty =0;	   B1duty = 100;  A2duty = 100;   B2duty = 0;
						   A3duty = 100;   B3duty= 0;    A4duty= 0;    B4duty = 100;   end
				2'b01 :begin//停止
						 A1duty =0;	   B1duty = 0;  A2duty = 0;   B2duty = 0;
						   A3duty = 0;   B3duty= 0;    A4duty= 0;    B4duty = 0;   end
						   
				2'b10 :begin //左转
						 A1duty =0;	   B1duty = 100;  A2duty = 0;   B2duty = 100;
						   A3duty = 0;   B3duty= 100;    A4duty= 0;    B4duty = 100;   end
						  
				2'b11:begin  //右转
						  A1duty =100;	   B1duty = 0;  A2duty = 100;   B2duty = 0;
						   A3duty = 100;   B3duty= 0;    A4duty= 100;    B4duty = 0;   end
				default :begin
					      A1duty =A1duty;	   B1duty = B1duty;  A2duty = A2duty;   B2duty = B2duty;
						   A3duty = A3duty;   B3duty= B3duty;    A4duty= A4duty;    B4duty = B4duty;   end
	endcase
	end
	else//使能端低电平
	begin
	A1duty =0;	   B1duty = 0;  A2duty = 0;   B2duty = 0;
						   A3duty = 0;   B3duty= 0;    A4duty= 0;    B4duty = 0;
	end
	end
endmodule    //duty_decoder

