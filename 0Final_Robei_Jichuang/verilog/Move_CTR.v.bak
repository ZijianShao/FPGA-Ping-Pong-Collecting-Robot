module Move_CTR(
	CLK,
	state,
	PWM1A,
	PWM1B,
	PWM2A,
	PWM2B,
	PWM3A,
	PWM3B,
	PWM4A,
	PWM4B,
	en);

	//---Ports declearation: generated by Robei---
	input CLK;
	input [1:0] state;
	output PWM1A;
	output PWM1B;
	output PWM2A;
	output PWM2B;
	output PWM3A;
	output PWM3B;
	output PWM4A;
	output PWM4B;
	input en;

	wire CLK;
	wire [1:0] state;
	wire PWM1A;
	wire PWM1B;
	wire PWM2A;
	wire PWM2B;
	wire PWM3A;
	wire PWM3B;
	wire PWM4A;
	wire PWM4B;
	wire en;
	wire [7:0] duty_decoder9_A1duty;
	wire [7:0] duty_decoder9_B1duty;
	wire [7:0] duty_decoder9_A2duty;
	wire [7:0] duty_decoder9_B2duty;
	wire [7:0] duty_decoder9_A3duty;
	wire [7:0] duty_decoder9_B3duty;
	wire [7:0] duty_decoder9_A4duty;
	wire [7:0] duty_decoder9_B4duty;

	//----Code starts here: integrated by Robei-----
	
	
	
	//---Module instantiation---
	PWM PWM1(
		.CLK(CLK),
		.duty (duty_decoder9_A1duty),
		.PWMOUT(PWM1A));

	PWM PWM2(
		.CLK(CLK),
		.duty (duty_decoder9_B1duty),
		.PWMOUT(PWM1B));

	PWM PWM3(
		.CLK(CLK),
		.duty (duty_decoder9_A2duty),
		.PWMOUT(PWM2A));

	PWM PWM4(
		.CLK(CLK),
		.duty (duty_decoder9_B2duty),
		.PWMOUT(PWM2B));

	PWM PWM5(
		.CLK(CLK),
		.duty (duty_decoder9_A3duty),
		.PWMOUT(PWM3A));

	PWM PWM6(
		.CLK(CLK),
		.duty (duty_decoder9_B3duty),
		.PWMOUT(PWM3B));

	PWM PWM7(
		.CLK(CLK),
		.duty (duty_decoder9_A4duty),
		.PWMOUT(PWM4A));

	PWM PWM8(
		.CLK(CLK),
		.duty (duty_decoder9_B4duty),
		.PWMOUT(PWM4B));

	duty_decoder duty_decoder9(
		.state(state),
		.A1duty(duty_decoder9_A1duty),
		.B1duty(duty_decoder9_B1duty),
		.A2duty(duty_decoder9_A2duty),
		.B2duty(duty_decoder9_B2duty),
		.A3duty(duty_decoder9_A3duty),
		.B3duty(duty_decoder9_B3duty),
		.A4duty(duty_decoder9_A4duty),
		.B4duty(duty_decoder9_B4duty),
		.en(en));

endmodule    //Move_CTR

